{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","isReversed","setReversed","NONE","sortType","setSortBy","goods","visibleGoods","ALPHABET","sort","LENGTH","a","b","length","reverse","getReorderedGoods","className","type","classNames","onClick","map","list","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAqCE,IAAME,EAAuB,WAClC,MAAkCC,oBAAS,GAA3C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAA8BF,mBAASH,EAASM,MAAhD,mBAAOC,EAAP,KAAiBC,EAAjB,KACMC,EAAK,UAAOR,GAqBlB,OAlDK,SACLQ,EADK,GAGJ,IADCF,EACF,EADEA,SAAUH,EACZ,EADYA,WAENM,EAAY,YAAOD,GAErBF,IAAaP,EAASW,UACxBF,EAAMG,OAGJL,IAAaP,EAASa,QACxBJ,EAAMG,MAAK,SAACE,EAAGC,GAAJ,OAAUD,EAAEE,OAASD,EAAEC,UAGhCZ,GACFK,EAAMQ,UAiCRC,CAAkBT,EAAO,CAAEL,aAAYG,aAGrC,sBAAKY,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACA,CAAE,WAAYd,IAAaP,EAASW,WAEtCW,QAAS,WAlBfd,EAAUR,EAASW,WAYf,iCAUA,wBACES,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,WAAYd,IAAaP,EAASa,SAEtCS,QAAS,WAxBfd,EAAUR,EAASa,SAkBf,4BAUA,wBACEO,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,YAAajB,IAEjBkB,QAAS,WA1CfjB,GAAaD,IAoCT,qBAWEG,GAAYH,EAER,wBACEgB,KAAK,SACLD,UAAU,4BACVG,QAAS,WAzDrBd,EAAUR,EAASM,MACnBD,GAAY,IAqDF,mBAUA,MAGR,6BACGI,EAAMc,KAAI,SAAAC,GAAI,OACb,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,YC/HlCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.e1a35fa0.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  if (sortType === SortType.ALPHABET) {\n    goods.sort();\n  }\n\n  if (sortType === SortType.LENGTH) {\n    goods.sort((a, b) => a.length - b.length);\n  }\n\n  if (isReversed) {\n    goods.reverse();\n  }\n\n  return visibleGoods;\n}\n\ntype Props = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport const App: React.FC<Props> = () => {\n  const [isReversed, setReversed] = useState(false);\n  const [sortType, setSortBy] = useState(SortType.NONE);\n  const goods = [...goodsFromServer];\n\n  const setSortNone = () => {\n    setSortBy(SortType.NONE);\n    setReversed(false);\n  };\n\n  const setReverse = () => {\n    setReversed(!isReversed);\n  };\n\n  const setSortByAlphabet = () => {\n    setSortBy(SortType.ALPHABET);\n  };\n\n  const setSortByLength = () => {\n    setSortBy(SortType.LENGTH);\n  };\n\n  getReorderedGoods(goods, { isReversed, sortType });\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-info',\n            { 'is-light': sortType !== SortType.ALPHABET },\n          )}\n          onClick={() => setSortByAlphabet()}\n        >\n          Sort alphabetically\n        </button>\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-success',\n            { 'is-light': sortType !== SortType.LENGTH },\n          )}\n          onClick={() => setSortByLength()}\n        >\n          Sort by length\n        </button>\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-warning',\n            { 'is-light': !isReversed },\n          )}\n          onClick={() => setReverse()}\n        >\n          Reverse\n        </button>\n        {\n          sortType || isReversed\n            ? (\n              <button\n                type=\"button\"\n                className=\"button is-danger is-light\"\n                onClick={() => {\n                  setSortNone();\n                }}\n              >\n                Reset\n              </button>\n            )\n            : ''\n        }\n      </div>\n      <ul>\n        {goods.map(list => (\n          <li data-cy=\"Good\" key={list}>\n            {list}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}